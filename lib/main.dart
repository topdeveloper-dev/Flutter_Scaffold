import 'package:Flutter_Scaffold/core/net/api.dart';
import 'package:Flutter_Scaffold/core/net/dio_manager.dart';
import 'package:dio/dio.dart';
import 'package:flutter/material.dart';
import 'package:retrofit/retrofit.dart';

import 'bean.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
        visualDensity: VisualDensity.adaptivePlatformDensity,
      ),
      home: MyHomePage(title: 'Flutter Demo Home Page'),
    );
  }
}

class MyHomePage extends StatefulWidget {
  MyHomePage({Key key, this.title}) : super(key: key);

  final String title;

  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  int _counter = 0;

  final APIClient _apiClient = APIClient(DioManager.instance.dio);

  Future<void> _incrementCounter() async {
    setState(() {
      _counter++;
    });
    /*HttpResponse<List<Autogenerated>> ret = await _apiClient.getTags();
    print("========");
    print(ret.response.statusCode);
    print(ret.response.statusMessage);
    print(ret.response.data.toString());*/
    DioManager.instance.dio.options.baseUrl =
        "https://5d42a6e2bc64f90014a56ca0.mockapi.io/api/v1/";
    //var ret = await DioManager.instance.dio.request<List<dynamic>>("/tags");
    /*var ret = await DioManager.instance.dio
        .request<List<dynamic>>("https://5d42a6e2bc64f90014a56ca0.mockapi.io/api/v1/tags", options: RequestOptions(baseUrl: "https://5d42a6e2bc64f90014a56ca0.mockapi.io/api/v17/"));
    print(ret.data.length);*/
    var ret = await DioManager.instance.dio
        .request("/tasks", data: {"id": 12 }, options: RequestOptions(
      method: "POST",
      extra: {"name": 12 },
    ));
    print(ret.data);
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(widget.title),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Text(
              'You have pushed the button this many times:',
            ),
            Text(
              '$_counter',
              style: Theme.of(context).textTheme.headline4,
            ),
          ],
        ),
      ),
      floatingActionButton: FloatingActionButton(
        onPressed: _incrementCounter,
        tooltip: 'Increment',
        child: Icon(Icons.add),
      ), // This trailing comma makes auto-formatting nicer for build methods.
    );
  }
}
